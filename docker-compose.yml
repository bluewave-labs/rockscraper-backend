# Use root/example as user/password credentials
version: '3.1'

services:
  back:
    image: back
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - 3000:3000
    command: npm run dev
    environment:
      MONGO_HOST: $MONGO_HOST
      MONGO_PORT: $MONGO_PORT
      MONGO_USER: $MONGO_USER
      MONGO_PASSWORD: $MONGO_PASSWORD
      REDIS_HOST: redis
      MONGO_DBNAME: $MONGO_DBNAME
      REDIS_PORT: $REDIS_PORT
      REDIS_DB: $REDIS_DB
    depends_on:
      - mongo
      - redis
    develop:
      watch:
        - action: sync
          path: ./src
          target: /src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
  mongo:
    image: mongo
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    ports:
      - $MONGO_PORT:27017
    volumes:
      - ./data/db:/data/db

  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://$MONGO_USER:$MONGO_PASSWORD@$MONGO_HOST:$MONGO_PORT/
    depends_on:
      - mongo

  redis:
    image: redis:6.2-alpine
    ports:
      - $REDIS_PORT:6379
    volumes:
      - ./data/redis:/data
    command: redis-server --save 20 1 --loglevel warning

volumes:
  data:
