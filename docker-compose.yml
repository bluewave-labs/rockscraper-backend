services:
  rockscraper_backend:
    image: rockscraper_backend/rockscraper_backend:v0
    build: .
    volumes:
      - ./:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    command: >
      bash -c "
        if [ \"$$NODE_ENV\" = \"production\" ]; then
          if ! npx sequelize-cli db:migrate; then
            if ! npx sequelize-cli db:create; then
              echo 'Database already exists';
            fi;
            npx sequelize-cli db:migrate;
          fi;
        fi;
        if [ \"$$NODE_ENV\" = \"production\" ]; then
          npm run prod;
        elif [ \"$$NODE_ENV\" = \"staging\" ]; then
          npm run staging;
        else
          npm run dev;
        fi"
  postgres:
    image: postgres:latest
    env_file:
      - .env.${NODE_ENV}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis/redis-stack:latest
    restart: on-failure
    ports:
      - ${REDIS_PORT}:6379
      - 8001:8001
    volumes:
      - ./data/redis:/data
    command: redis-stack-server

volumes:
  pgdata:
